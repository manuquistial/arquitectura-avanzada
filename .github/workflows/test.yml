name: Run Tests

on:
  pull_request:
    branches: [master, develop]
  push:
    branches: [master]
  workflow_call:  # Permitir que sea llamado por otros workflows

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false  # No detener si un servicio falla, ejecutar todos
      matrix:
        service:
          - citizen
          - ingestion
          - metadata
          - transfer
          - signature
          - sharing
          - auth
          - gateway
          - mintic_client
          - notification
          - read_models
          - transfer_worker
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        working-directory: services/${{ matrix.service }}
        run: |
          poetry install --with dev --no-root
      
      - name: Run pytest
        working-directory: services/${{ matrix.service }}
        run: |
          export PYTHONPATH="${PWD}:$PYTHONPATH"
          # Service-specific coverage thresholds based on actual implementation
          case "${{ matrix.service }}" in
            gateway|notification|read_models|transfer_worker)
              # Placeholder tests only, no coverage required
              poetry run pytest tests/ -v
              ;;
            ingestion|metadata|transfer|signature)
              # Basic services with 20% coverage
              poetry run pytest tests/ \
                --cov=app \
                --cov-report=xml \
                --cov-report=term \
                --cov-fail-under=20 \
                -v
              ;;
            citizen)
              # Higher coverage (40%)
              poetry run pytest tests/ \
                --cov=app \
                --cov-report=xml \
                --cov-report=term \
                --cov-fail-under=40 \
                -v
              ;;
            sharing|auth|mintic_client)
              # Core services with 50% coverage
              poetry run pytest tests/ \
                --cov=app \
                --cov-report=xml \
                --cov-report=term \
                --cov-fail-under=50 \
                -v
              ;;
            *)
              # Default: 40% coverage
              poetry run pytest tests/ \
                --cov=app \
                --cov-report=xml \
                --cov-report=term \
                --cov-fail-under=40 \
                -v
              ;;
          esac
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: services/${{ matrix.service }}/coverage.xml
          flags: ${{ matrix.service }}
          name: ${{ matrix.service }}-coverage

  common-tests:
    name: Common Package Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        working-directory: services/common
        run: |
          # Common is a library package, needs to be installed for imports
          poetry install --with dev
      
      - name: Run pytest
        working-directory: services/common
        run: |
          poetry run pytest carpeta_common/tests/ \
            --cov=carpeta_common \
            --cov-report=xml \
            --cov-report=term \
            --cov-fail-under=54 \
            -v
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: services/common/coverage.xml
          flags: common
          name: common-coverage

  # Test summary removed - not needed
  # ci.yml will fail deployment if tests fail due to needs: [backend-test]

