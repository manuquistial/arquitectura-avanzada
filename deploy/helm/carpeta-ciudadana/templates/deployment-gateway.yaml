{{- if .Values.gateway.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "carpeta-ciudadana.fullname" . }}-gateway
  labels:
    app: gateway
    {{- include "carpeta-ciudadana.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      serviceAccountName: {{ include "carpeta-ciudadana.serviceAccountName" . }}
      containers:
      - name: gateway
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: RATE_LIMIT_PER_MINUTE
          value: "60"
        - name: REDIS_HOST
          value: redis
        {{- if .Values.global.keyVault.enabled }}
        - name: SERVICE_ID
          value: "gateway"
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "carpeta-ciudadana.fullname" . }}-app-flags
        - configMapRef:
            name: {{ include "carpeta-ciudadana.fullname" . }}-cors-origins
        {{- if .Values.global.keyVault.enabled }}
        {{- if .Values.global.keyVault.syncToK8sSecrets }}
        # Use synced K8s secrets from Key Vault
        - secretRef:
            name: db-secrets-kv
        - secretRef:
            name: sb-secrets-kv
        - secretRef:
            name: m2m-auth-kv
        {{- end }}
        {{- else }}
        # Use traditional K8s secrets
        - secretRef:
            name: db-secrets
            optional: true
        - secretRef:
            name: sb-secrets
            optional: true
        - secretRef:
            name: m2m-auth
            optional: true
        {{- end }}
        {{- if .Values.global.keyVault.enabled }}
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
        {{- end }}
        resources:
          {{- toYaml .Values.gateway.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 2
      {{- if .Values.global.keyVault.enabled }}
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ include "carpeta-ciudadana.fullname" . }}-secrets
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "carpeta-ciudadana.fullname" . }}-gateway
  labels:
    app: gateway
    {{- include "carpeta-ciudadana.labels" . | nindent 4 }}
spec:
  type: {{ .Values.gateway.service.type }}
  ports:
  - port: {{ .Values.gateway.service.port }}
    targetPort: 8000
    name: http
  selector:
    app: gateway
---
{{- if .Values.gateway.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "carpeta-ciudadana.fullname" . }}-gateway
  labels:
    app: gateway
    {{- include "carpeta-ciudadana.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "carpeta-ciudadana.fullname" . }}-gateway
  minReplicas: {{ .Values.gateway.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.gateway.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.gateway.autoscaling.targetCPUUtilizationPercentage }}
{{- end }}
{{- end }}

