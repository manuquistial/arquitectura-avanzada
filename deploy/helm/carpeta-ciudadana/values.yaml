# Default values for carpeta-ciudadana

global:
  environment: development
  imageRegistry: manuelquistial
  imagePullPolicy: IfNotPresent

# Frontend
frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-frontend
    tag: latest
  service:
    type: LoadBalancer
    port: 80
    targetPort: 3000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Gateway Service
gateway:
  enabled: true
  replicaCount: 3
  image:
    repository: carpeta-gateway
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70

# Citizen Service
citizen:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-citizen
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Ingestion Service
ingestion:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-ingestion
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70

# Signature Service
signature:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-ciudadana/signature
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Metadata Service
metadata:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-metadata
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Transfer Service
transfer:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-transfer
    tag: latest
  service:
    type: LoadBalancer
    port: 8000
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Sharing Service
sharing:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-ciudadana/sharing
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Notification Service
notification:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-ciudadana/notification
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# MinTIC Client Service
minticClient:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-mintic_client
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# Signature Service
signature:
  enabled: true
  replicaCount: 2
  image:
    repository: carpeta-signature
    tag: latest
  service:
    type: ClusterIP
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70

# PostgreSQL Configuration (Azure Database for PostgreSQL)
postgresql:
  enabled: true
  host: carpeta-db-server.postgres.database.azure.com
  port: 5432
  auth:
    username: carpeta_admin
    password: "" # Set via --set postgresql.auth.password=xxx or secret
    database: carpeta_ciudadana

# Azure Storage Configuration
azure:
  storage:
    accountName: "" # Set via --set azure.storage.accountName=xxx or secret
    accountKey: "" # Set via --set azure.storage.accountKey=xxx or secret
    containerName: "documents"

# OpenSearch Configuration
opensearch:
  enabled: true
  image:
    repository: opensearchproject/opensearch
    tag: "2.11.0"
    pullPolicy: IfNotPresent
  
  # Authentication
  auth:
    username: "admin"
    password: "Admin@123"  # Change in production
  
  security:
    enabled: false  # Set to true for production
  
  # Storage
  storage:
    size: "8Gi"
    storageClass: "managed-premium"  # Azure Premium SSD
  
  # Java heap size
  javaOpts:
    xms: "512m"
    xmx: "512m"
  
  # Resources
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  # Service endpoint (for metadata service)
  host: "carpeta-ciudadana-opensearch"
  port: 9200

# Configuration
config:
  database:
    host: YOUR_RDS_ENDPOINT
    port: 5432
    name: carpeta_ciudadana
    username: carpeta_admin
  s3:
    bucket: YOUR_S3_BUCKET
  opensearch:
    host: YOUR_OPENSEARCH_ENDPOINT
    port: 443
  cognito:
    region: us-east-1
    userPoolId: YOUR_USER_POOL_ID
    clientId: YOUR_CLIENT_ID
  sqs:
    queueUrl: YOUR_SQS_QUEUE_URL
  sns:
    topicArn: YOUR_SNS_TOPIC_ARN
  mintic:
    baseUrl: https://hub.mintic.gov.co
    operatorId: YOUR_OPERATOR_ID
    operatorName: YOUR_OPERATOR_NAME
  otel:
    enabled: true
    endpoint: http://jaeger-collector:4317

# Service Account (for IRSA)
serviceAccount:
  create: true
  annotations: {}
  name: carpeta-ciudadana-sa

# Ingress
ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: YOUR_ACM_CERT_ARN
  hosts:
    - host: carpeta-ciudadana.example.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: frontend
              port: 80
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: gateway
              port: 8000

# OpenTelemetry Collector
otel:
  enabled: true
  replicaCount: 2
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

