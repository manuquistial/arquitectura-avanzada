# Production Environment Overrides
# Use with: helm install -f values.yaml -f values-prod.yaml

global:
  environment: production

# CORS - Production solo permite el dominio del frontend
cors:
  allowedOrigins: "https://carpeta-ciudadana.example.com"  # CHANGE to your actual domain
  allowCredentials: true

# MinTIC Hub - Production usa solo URLs seguras
mintic:
  allowInsecureUrls: false

# Ingress for Production
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  tls:
    enabled: true  # Enable TLS for production (requires domain)
    secretName: carpeta-ciudadana-tls-prod
    certManager:
      enabled: true
      clusterIssuer: letsencrypt-prod  # Use production for prod
      acmeChallenge: http01
  hosts:
    - host: carpeta-ciudadana.example.com  # CHANGE THIS to your actual domain
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: frontend
              port: 80
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: gateway
              port: 8000

# Production: Más réplicas, HPA activo, recursos aumentados
frontend:
  replicaCount: 3
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 15
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

gateway:
  replicaCount: 3
  resources:
    requests:
      memory: "512Mi"  # Production: más memoria para rate limiter
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "2000m"     # Puede escalar alto
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    # Custom metrics (si Prometheus Adapter está disponible)
    customMetrics:
      enabled: true
      metrics:
        - type: Pods
          pods:
            metric:
              name: http_request_duration_seconds_p95
            target:
              type: AverageValue
              averageValue: "500m"  # Scale si p95 > 500ms

citizen:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

ingestion:
  replicaCount: 3
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 15

metadata:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

readModels:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

signature:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

transfer:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

sharing:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

notification:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

minticClient:
  replicaCount: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10

# OpenSearch - multi-node for production (if needed)
# opensearch:
#   replicas: 3
#   singleNode: false

